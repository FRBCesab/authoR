% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/search_ror.R
\name{search_ror}
\alias{search_ror}
\title{Get ROR}
\usage{
search_ror(
  x,
  org.name = "OrganizationName",
  country.name = "CountryName",
  type = NULL,
  matching.type = NULL,
  rows = 1
)
}
\arguments{
\item{x}{a data frame containing at least one column: the organization name}

\item{org.name}{character. The name of the column containing the organization
name. Defaults to "OrganizationName".}

\item{country.name}{character. The name of the column containing the name of the organization country.
Defaults to "CountryName".}

\item{type}{character. The type of organizations for matching (see details)}

\item{matching.type}{character. The type of match performed (see details)}

\item{rows}{numerical. The row(s) number(s) to be returned up to 20. Default
to the first one, which is the one with the best search score.}
}
\value{
the same input data frame with the missing (i.e. NA) ORCID, and
optionally the corresponding names, if found.
}
\description{
Get ROR ID based on the organisation name.
}
\details{
This function queries the ROR API (https://ror.readme.io/docs/rest-api)

If not NULL, the argument \code{type} can be one of the following: Education,
Healthcare, Company, Archive, Nonprofit, Government, Facility, and Other.

If not NULL, the argument \code{matching.type} can be one of the following:
\itemize{
\item PHRASE: the entire phrase matched to a variant of the organization's name
\item COMMON TERMS: the matching was done by comparing the words separately
\item FUZZY: the matching was done by fuzzy-comparing the words separately
\item HEURISTICS: "University of X" was matched to "X University"
\item ACRONYM: matching by acronym
}
}
\examples{

\dontrun{

  
  df <- data.frame(
  OrganizationName = c("USP", "Universidade de Sao Paulo", "USP"), 
  CountryName = c("Brazil", "Brazil", NA))
  search_ror(df)
  search_ror(df, matching.type = "ACRONYM")
  
}   
  
}
\author{
Renato A. F. de Lima
}
